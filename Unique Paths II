class Solution {
  public int uniquePathsWithObstacles(int[][] obstacles) {
   int m = obstacles.length;
   int n = obstacles[0].length;
  if (obstacles[0][0] == 1 || obstacles[m - 1][n - 1] == 1)
            return 0;
     return  uniquePathsWithObstaclesRecur(m,n,obstacles);
  }
public int uniquePathsWithObstaclesRecur(int row, int col , int [][] obstacles) {
int dp[][] = new int[row][col];

dp[0][0]=1;

        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if (obstacles[i][j] == 1) {
                    dp[i][j] = 0; 
                } else {
                    if (i > 0) dp[i][j] += dp[i - 1][j];
                    if (j > 0) dp[i][j] += dp[i][j - 1];
                }
            }
        }
return dp[row-1][col-1];
}
}
