/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     ArrayList<Integer> res = new ArrayList<>();
    public int minDiffInBST(TreeNode root) {
       inorder(root);
        Collections.sort(res);
        int min = Integer.MAX_VALUE;
        int i=0;
        while(i<res.size()-1)
        {
          if(min>Math.abs(res.get(i)-res.get(i+1)))  
              min = Math.abs(res.get(i)-res.get(i+1));
            i++;
        }
        return min;
    }
    public void inorder(TreeNode root)
    {
        if(root==null)
            return;
        inorder(root.left);
        res.add(root.val);
        inorder(root.right);
    }
}