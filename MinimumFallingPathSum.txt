class Solution {
    
    public int minFallingPathSum(int[][] A) {
        int row = A.length;
        int col = A[0].length;
        int dp [][] = new int[row][col];
        for(int i=0;i<col;i++)
        {
            dp[row-1][i]=A[row-1][i];
        }
        for(int i=row-2;i>=0;i--)
        {
            for(int j=0;j<col;j++)
            {
                int ans = Integer.MAX_VALUE;
                if(j+1<col)
               ans = Math.min(ans , A[i][j]+dp[i+1][j+1]); 
                 
               ans = Math.min(ans , A[i][j]+dp[i+1][j]); 
                  if(j-1>=0)
               ans = Math.min(ans , A[i][j]+dp[i+1][j-1]); 
                
                dp[i][j] = ans;
            }
        }
          int ans= Integer.MAX_VALUE;
       for(int i=0;i<col;i++)
       {
          ans  = Math.min(ans,dp[0][i]);
       }
        return ans;
    }
    
}