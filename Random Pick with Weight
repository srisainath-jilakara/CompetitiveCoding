import java.util.Random;

class Solution {
    private int[] prefixSum;
    private int totalSum;
    private Random rand;

    public Solution(int[] w) {
        this.prefixSum = new int[w.length];
        this.prefixSum[0] = w[0];

        for (int i = 1; i < w.length; i++) {
            prefixSum[i] = prefixSum[i - 1] + w[i];
        }

        this.totalSum = prefixSum[w.length - 1];
        this.rand = new Random();
    }

    public int pickIndex() {
        int target = rand.nextInt(totalSum) + 1; // Random integer in [1, totalSum]
        return binarySearch(target);
    }

    private int binarySearch(int target) {
        int left = 0, right = prefixSum.length - 1;

        while (left < right) {
            int mid = left + (right - left) / 2;

            if (prefixSum[mid] < target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }

        return left;
    }
}
