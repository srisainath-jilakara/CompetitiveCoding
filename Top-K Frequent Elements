class Solution {
    public int[] topKFrequent(int[] nums, int k) {
       HashMap<Integer,Integer> map = new HashMap<>();
        for(int i:nums)
        {
            map.put(i,map.getOrDefault(i,0)+1);
        }
        PriorityQueue<Map.Entry<Integer,Integer>> queue = new PriorityQueue<>((a,b)
        ->a.getValue().equals(b.getValue())?
            Integer.compare(b.getKey(),a.getKey()):
            Integer.compare(b.getValue(),a.getValue()));
        for(Map.Entry<Integer,Integer> entry:map.entrySet())
        {
            queue.offer(entry);
        }         
        List<Integer> result = new ArrayList<>();                                                             
          for(int i=0;i<k;i++)
        {
            result.add(queue.poll().getKey());
        }                                     
            int res []= new int[result.size()];
            int count = 0;
            for(int j:result)
             {
                 res[count++] = j;
             }
         return res;
    }
   
}
