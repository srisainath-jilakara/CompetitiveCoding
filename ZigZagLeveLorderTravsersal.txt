/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>>  result = new ArrayList<>();
        if(root==null)
            return result;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean zig_zag = false;
        while(!q.isEmpty())
        {
            int size = q.size();
            List<Integer> arr = new ArrayList<>();
            for(int i=0;i<size;i++)
            {
                TreeNode node = q.remove();
                arr.add(node.val);
               
               
                     if(node.left!=null)
                    q.add(node.left);
                   if(node.right!=null)
                    q.add(node.right);   
  
            }
            if(zig_zag)
            {
                 Collections.reverse(arr); 
                 result.add(arr);
            } 
            else
            result.add(arr);
            
            zig_zag = !zig_zag;
           
        }
        return result;
        
    }
}