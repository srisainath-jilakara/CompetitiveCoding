class Solution {
public int subarraysWithKDistinct(int arr[], int k) {
return subArraysWithLessThanEqualKDistinct(arr,k) - subArrayWithLessThanEqualKDistinct(arr,k-1);
}

public int subArraysWithLessThanEqualKDistinct(int arr[], int k){
int l = 0, r = 0;
int count = 0;
HashMap<Integer,Integer> map = new HashMap<>();
while(r<arr.length) {
map.put(arr[r],map.getOrDefault(arr[r],0)+1);
while(map.size()>k){
map.put(arr[l],map.get(arr[l])-1);
if(map.get(arr[l])==0) map.remove(arr[l]);
l = l+1;
}
count += r-l+1;
r++;
}

return count;
}


}
