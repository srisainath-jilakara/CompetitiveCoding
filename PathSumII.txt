/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> cur = new ArrayList<>();
        hasPathSumRecur(root,targetSum,0,cur , result);
        return result;
    }
    public void hasPathSumRecur(TreeNode root,int targetSum,int sum,List<Integer> current , List<List<Integer>> result)
    {
        if(root==null)
            return;
      current.add(root.val);
        sum += root.val;
        if(sum==targetSum && root.left==null && root.right==null)
        {
            result.add(current);
            return;
        }
        
        hasPathSumRecur(root.left,targetSum,sum,new ArrayList<Integer>(current),result);
        hasPathSumRecur(root.right,targetSum,sum,new ArrayList<Integer>(current),result);
    }
}