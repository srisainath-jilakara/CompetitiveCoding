class Solution {
    public void nextPermutation(int[] nums) {
    
        
        int min=-1;
        int i=0;
         for(i=nums.length-1;i>0;i--)
         {
             if(nums[i]>nums[i-1])
             {
                 min=i;
                 break;
             }
         }
        int n = nums.length;
        if(min==-1)
        {
             Arrays.sort(nums);
            return;
        }
        else 
        {
            int x = nums[i - 1];
              
            // II) Find the smallest digit on right 
            // side of (i-1)'th digit that is greater 
            // than number[i-1]
            for (int j = i + 1; j < n; j++) 
            {
                if (nums[j] > x && nums[j] < nums[min]) 
                {
                    min = j;
                }
            }
  
            // III) Swap the above found smallest 
            // digit with number[i-1]
            swap(nums, i - 1, min);
  
            // IV) Sort the digits after (i-1) 
            // in ascending order
            Arrays.sort(nums, i, n);
        }
        
    }
    static void swap(int ar[], int i, int j) 
    {
        int temp = ar[i];
        ar[i] = ar[j];
        ar[j] = temp;
    }

}