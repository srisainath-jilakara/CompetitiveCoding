// 1-neighbours if <2 || >3 --> 0
// 0-neighbours if =3 --> 1

class Solution {
    
    public void gameOfLife(int[][] board) {
    
        int n = board.length;
        if(n==0)
            return;
        int m = board[0].length;
        
        int original[][] = new int[n][m];
        
        int rows[] = {-1,-1,0,1,1,1,0,-1};
        int cols[] = {0,-1,-1,-1,0,1,1,1};
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                original[i][j] = board[i][j];        
            }
        }
        
        int nR,nC;
        int neighbours = 0;
        
        for(int i=0;i<n;i++){
            
            for(int j=0;j<m;j++){
                
                neighbours = 0;
                
                for(int k=0;k<8;k++){
                        
                    nR = i+rows[k];
                    nC = j+cols[k];
                        
                    if(isValid(original,nR,nC,n,m)){                            
                        neighbours++;                            
                    }                        
                        
                }
                if(board[i][j]==0){ 
                    
                    if(neighbours==3){
                        board[i][j] = 1;
                    }
                    
                }
                else{
                    
                    if(neighbours<2 || neighbours>3){
                        board[i][j] = 0;
                    }
                    
                }
                
            }
            
        }
        
    }
    
    public boolean isValid(int org[][],int i,int j,int n,int m){
        
        if( (i>=0 && i<n) && (j>=0 && j<m) ){
            
            if(org[i][j]==1)
                return true;
            
        }
        return false;
        
    }
    
    
}