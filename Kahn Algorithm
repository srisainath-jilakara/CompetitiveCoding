class Solution {

public ArrayList<Integer> topoSort(int v,int [][]graph) {
List<List<Integer>> adjList = new ArrayList<>();
int inDegree[] = new int[v];
List<Integer> result  = new ArrayList<>();
for(int i=0;i<v;i++) {
adjList.add(new ArrayList<Integer>());
}
for(int i=0;i<graph.length;i++) {
adjList.get(graph[i][0]).add(graph[i][1]);
inDegree[graph[i][1]]++;

}
Queue<Integer> queue = new LinkedList<>();
for(int i=0;i<v;i++) {
if(inDegree[i]==0 ) {
queue.offer(i);
}
}
ArrayList<Integer> topo = new ArrayList<>();
while(!queue.isEmpty()) {
int V = queue.poll();
topo.add(V);
for(int node: adjList.get(V)) {
inDegree[node]--;
if(inDegree[node]==0){
queue.offer(node);
}
}
}
return topo;
}


}
