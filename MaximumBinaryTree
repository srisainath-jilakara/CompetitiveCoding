/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        TreeNode root = new TreeNode();
       return  constructRecur(nums,0,nums.length);
    
        
    } 
    TreeNode constructRecur(int nums[],int start,int end)
    {
        if(start==end)
            return null;
        int pivot = pivotElement(nums,start,end);
        TreeNode node = new TreeNode(nums[pivot]);
       node.left =  constructRecur(nums,start,pivot);
       node.right =  constructRecur(nums,pivot+1,end);
       return node; 
    }
    int pivotElement(int nums[], int start,int end)
    {
        int index = -1;
        int max = Integer.MIN_VALUE;
        for(int i=start;i<end;i++)
        {
            if(nums[i]>max)
            {
                max = nums[i];
                index = i;
            }
        }
        return index;
    }
}
