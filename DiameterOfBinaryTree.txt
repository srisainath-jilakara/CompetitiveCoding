/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        if(root==null)
            return 0;
        return diameter(root);
    }
    public int diameter(TreeNode root)
    {
             if(root==null)
            return 0;
        int lheight = height(root.left);
        int rheight = height(root.right);
        
    
        int ld = diameter(root.left);
        int rd = diameter(root.right);
        
       return Math.max(lheight + rheight ,
                        Math.max(ld, rd));
        
    }
    public int height(TreeNode root)
    {
        if(root==null)
            return 0;
        int lheight = height(root.left);
        int rheight = height(root.right);
        
        return Math.max(lheight,rheight)+1;
    }
}