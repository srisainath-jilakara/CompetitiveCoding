/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode s, TreeNode t) {
        if(s==null && t==null)
            return true;
         if(s==null || t==null)
            return false;
         
             if(isIdentical(s,t))
            return true;
        
            return isSubtree(s.left,t)|| isSubtree(s.right,t);
    }
      
    
    public boolean isIdentical(TreeNode a,TreeNode b){
        
        if(a==null && b==null)
            return true;
        if(a==null || b==null)
            return false;
        
        return (a.val == b.val && isIdentical(a.left,b.left) && isIdentical(a.right,b.right));
    }
}


